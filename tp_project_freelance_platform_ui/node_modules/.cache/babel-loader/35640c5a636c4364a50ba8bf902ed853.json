{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\repos\\\\TP_Project\\\\tp_project_freelance_platform_ui\\\\src\\\\components\\\\AuthComponents\\\\Register.jsx\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './Register.css';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n};\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validateErrors = (name, value, formErrors) => {\n      debugger;\n\n      switch (name) {\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"Invalid email address ❌\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\n          break;\n\n        case \"confirmPassword\":\n          formErrors.confirmPassword = value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\n          break;\n\n        case \"role\":\n          formErrors.role = value === \"Choose role\" ? \"You need to choose a role for user\" : \"\";\n\n        default:\n          break;\n      }\n\n      ;\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n      this.validateErrors(name, value, formErrors);\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      debugger;\n      console.log(this.state);\n\n      if (formValid(this.state)) {\n        console.log(`\n            --SUBMITTING--\n            Email: ${this.state.email}\n            Password: ${this.state.password}\n            Role: ${this.state.role}\n          `);\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      formErrors: {\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        role: \"\"\n      },\n      confirmPassord: null,\n      role: null\n    };\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n    return React.createElement(\"div\", {\n      className: \"bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-5\",\n      style: {\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form align-middle w-75\",\n      style: {\n        position: \"relative\",\n        margin: \"50%\",\n        textAlign: \"center\"\n      },\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Sign Up to People FreeLance\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Email address\"))), React.createElement(Form.Control, {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, formErrors.email))), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Password\"))), React.createElement(Form.Control, {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(Form.Group, {\n      controlId: \"formBasicConfirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Confirm password\"))), React.createElement(Form.Control, {\n      className: formErrors.confirmPassword.length > 0 ? \"error\" : null,\n      placeholder: \"confirmPassword\",\n      type: \"password\",\n      name: \"confirmPassword\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), formErrors.confirmPassword.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, formErrors.confirmPassword)), React.createElement(\"label\", {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"What role you will have?\"))), React.createElement(\"select\", {\n      className: formErrors.role.length > 0 ? \"form-control error\" : \"form-control\",\n      onChange: this.handleChange,\n      value: this.state.role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Choose role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Choose role\"), React.createElement(\"option\", {\n      value: \"Employee\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Employee\"), React.createElement(\"option\", {\n      value: \"Employeer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Employeer\")), formErrors.role.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, formErrors.role)), React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Sing Up\")), ' ', React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Back to \", React.createElement(Link, {\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Sing in\"))))))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/andre/repos/TP_Project/tp_project_freelance_platform_ui/src/components/AuthComponents/Register.jsx"],"names":["React","Form","Button","Link","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Register","Component","constructor","props","validateErrors","name","value","email","test","password","confirmPassword","role","handleChange","e","preventDefault","target","state","setState","console","log","handleSubmit","error","confirmPassord","render","height","position","margin","textAlign","float","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './Register.css';\r\n\r\nconst emailRegex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n  \r\n    // validate form errors being empty\r\n    Object.values(formErrors).forEach(val => {\r\n      val.length > 0 && (valid = false);\r\n    });\r\n  \r\n    // validate the form was filled out\r\n    Object.values(rest).forEach(val => {\r\n      val === null && (valid = false);\r\n    });\r\n  };\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            \r\n            formErrors: {\r\n                email: \"\",\r\n                password: \"\",\r\n                confirmPassword: \"\",\r\n                role: \"\"\r\n            },\r\n\r\n            confirmPassord: null,\r\n            role: null,\r\n        }\r\n    }\r\n\r\n    validateErrors = (name, value, formErrors) => {\r\n        debugger;\r\n        switch (name) {\r\n            case \"email\":\r\n                formErrors.email = emailRegex.test(value)\r\n                    ? \"\"\r\n                    : \"Invalid email address ❌\";\r\n                break;\r\n\r\n            case \"password\":\r\n                formErrors.password =\r\n                    value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\r\n                break;\r\n\r\n            case \"confirmPassword\":\r\n                formErrors.confirmPassword =\r\n                    value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\r\n                break;\r\n\r\n            case \"role\":\r\n                formErrors.role =\r\n                    value === \"Choose role\" ? \"You need to choose a role for user\" : \"\";\r\n            default:\r\n                break;\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n        this.validateErrors(name, value, formErrors);\r\n        this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        debugger;\r\n        console.log(this.state);\r\n        if (formValid(this.state)) {\r\n          console.log(`\r\n            --SUBMITTING--\r\n            Email: ${this.state.email}\r\n            Password: ${this.state.password}\r\n            Role: ${this.state.role}\r\n          `);\r\n        } else {\r\n          console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n        }\r\n      };\r\n\r\n    render() {\r\n        const formErrors = this.state.formErrors;\r\n\r\n        return (\r\n            <div className=\"bg\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\"></div>\r\n                        <div className=\"col-md-5\" style={{ height: \"100vh\" }}>\r\n\r\n                            <form \r\n                                className=\"form align-middle w-75\"\r\n                                style={{\r\n                                    position: \"relative\",\r\n                                    margin: \"50%\",\r\n                                    textAlign: \"center\"\r\n                                }}\r\n                                onSubmit={this.handleSubmit}\r\n                            >\r\n                                <h3>\r\n                                    <em>\r\n                                        Sign Up to People FreeLance\r\n                                    </em>\r\n                                </h3>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label style={{ float: \"left\" }}><h6><em>Email address</em></h6></Form.Label>\r\n                                        <Form.Control\r\n                                            className={formErrors.email.length > 0 ? \"error\" : null}\r\n                                            placeholder=\"Email\"\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            noValidate\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        {\r\n                                            formErrors.email.length > 0 && (\r\n                                                <h6><em className=\"errorMessage\">{formErrors.email}</em></h6>\r\n                                            )}\r\n\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label style={{ float: \"left\" }}><h6><em>Password</em></h6></Form.Label>\r\n                                        <Form.Control\r\n                                            className={formErrors.password.length > 0 ? \"error\" : null}\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            noValidate\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        {formErrors.password.length > 0 && (\r\n                                            <span className=\"errorMessage\">{formErrors.password}</span>\r\n                                        )}\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicConfirmPassword\">\r\n                                        <Form.Label style={{ float: \"left\" }}><h6><em style={{ color: \"white\" }}>Confirm password</em></h6></Form.Label>\r\n                                        <Form.Control\r\n                                            className={formErrors.confirmPassword.length > 0 ? \"error\" : null}\r\n                                            placeholder=\"confirmPassword\"\r\n                                            type=\"password\"\r\n                                            name=\"confirmPassword\"\r\n                                            required\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        {formErrors.confirmPassword.length > 0 && (\r\n                                            <span className=\"errorMessage\">{formErrors.confirmPassword}</span>\r\n                                        )}\r\n                                    </Form.Group>\r\n\r\n                                    <label style={{ float: \"left\" }}><h6><em style={{ color: \"white\" }} >What role you will have?</em></h6></label>\r\n                                    <select className={formErrors.role.length > 0 ? \"form-control error\" : \"form-control\"} \r\n                                            onChange={this.handleChange}\r\n                                            value = {this.state.role}\r\n                                            >\r\n                                        <option value = \"Choose role\">Choose role</option>\r\n                                        <option value = \"Employee\">Employee</option>\r\n                                        <option value = \"Employeer\">Employeer</option>\r\n                                        \r\n                                    </select>\r\n                                    {formErrors.role.length > 0 && (\r\n                                        <span className=\"errorMessage\">{formErrors.role}</span>\r\n                                    )}\r\n                                </div>\r\n                                <Button type = \"submit\" color=\"primary\"><em>Sing Up</em></Button>{' '}\r\n                                <hr />\r\n                                <h6><em style={{ color: \"white\" }}>Back to <Link to='/Login'>Sing in</Link></em></h6>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Register"]},"metadata":{},"sourceType":"module"}