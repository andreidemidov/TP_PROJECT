{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\repos\\\\TP_Project\\\\tp_project_freelance_platform_ui\\\\src\\\\components\\\\AuthComponents\\\\Register.jsx\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { userService } from '../../services/UserService';\nimport './Register.css';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validateErrors = (name, value, formErrors) => {\n      switch (name) {\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"Invalid email address ❌\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\n          break;\n\n        case \"firstName\":\n          formErrors.firstName = value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\n          break;\n\n        case \"confirmPassword\":\n          formErrors.confirmPassword = value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\n          formErrors.confirmPassword = value !== this.state.password ? \"Passwords not match ❌\" : \"\";\n          break;\n\n        case \"role\":\n          formErrors.role = value === \"Choose role\" ? \"You need to choose a role for user\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      ;\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n      this.validateErrors(name, value, formErrors);\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n\n      if (formValid(this.state)) {\n        let user = {\n          emailAddress: this.state.email,\n          password: this.state.password,\n          role: this.state.role\n        };\n      } else {\n        console.log(formValid(this.state));\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.state = {\n      email: null,\n      firstName: null,\n      lastName: null,\n      password: null,\n      confirmPassword: null,\n      role: null,\n      formErrors: {\n        email: \"\",\n        firstName: null,\n        lastName: null,\n        password: \"\",\n        confirmPassword: \"\",\n        role: \"\"\n      }\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-5\",\n      style: {\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form align-middle w-75\",\n      style: {\n        position: \"relative\",\n        margin: \"50%\",\n        textAlign: \"center\"\n      },\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Sign Up to People FreeLance\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Email address\"))), React.createElement(Form.Control, {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, formErrors.email))), React.createElement(Form.Group, {\n      controlId: \"firstNameId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"First Name\"))), React.createElement(Form.Control, {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, formErrors.email))), React.createElement(Form.Group, {\n      controlId: \"lastNameId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Email address\"))), React.createElement(Form.Control, {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"lastName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, formErrors.email))), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Password\"))), React.createElement(Form.Control, {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(Form.Group, {\n      controlId: \"formBasicConfirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Confirm password\"))), React.createElement(Form.Control, {\n      className: formErrors.confirmPassword.length > 0 ? \"error\" : null,\n      placeholder: \"confirmPassword\",\n      type: \"password\",\n      name: \"confirmPassword\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), formErrors.confirmPassword.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, formErrors.confirmPassword)), React.createElement(\"label\", {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"What role you will have?\"))), React.createElement(\"select\", {\n      className: formErrors.role.length > 0 ? \"form-control error\" : \"form-control\",\n      onChange: this.handleChange,\n      required: true,\n      name: \"role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Choose role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Choose role\"), React.createElement(\"option\", {\n      value: \"Employee\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Employee\"), React.createElement(\"option\", {\n      value: \"Employeer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Employeer\")), formErrors.role.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, formErrors.role)), React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Sing Up\")), ' ', React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Back to \", React.createElement(Link, {\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Sing in\"))))))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/andre/repos/TP_Project/tp_project_freelance_platform_ui/src/components/AuthComponents/Register.jsx"],"names":["React","Form","Button","Link","userService","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Register","Component","constructor","props","validateErrors","name","value","email","test","password","firstName","lastName","confirmPassword","state","role","handleChange","e","preventDefault","target","setState","handleSubmit","console","log","user","emailAddress","error","render","height","position","margin","textAlign","float","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { userService } from '../../services/UserService';\r\nimport './Register.css';\r\n\r\nconst emailRegex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n\r\n    // validate form errors being empty\r\n    Object.values(formErrors).forEach(val => {\r\n        val.length > 0 && (valid = false);\r\n    });\r\n\r\n    // validate the form was filled out\r\n    Object.values(rest).forEach(val => {\r\n        val === null && (valid = false);\r\n    });\r\n\r\n    return valid;\r\n};\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: null,\r\n            firstName: null,\r\n            lastName: null,\r\n            password: null, \r\n            confirmPassword: null,\r\n            role: null,\r\n            formErrors: {\r\n                email: \"\",\r\n                firstName: null,\r\n                lastName: null,\r\n                password: \"\",\r\n                confirmPassword: \"\",\r\n                role: \"\"\r\n            },\r\n        };\r\n    }\r\n\r\n    validateErrors = (name, value, formErrors) => {\r\n        switch (name) {\r\n            case \"email\":\r\n                formErrors.email = emailRegex.test(value)\r\n                    ? \"\"\r\n                    : \"Invalid email address ❌\";\r\n                break;\r\n\r\n            case \"password\":\r\n                formErrors.password =\r\n                    value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\r\n                break;\r\n\r\n            case \"firstName\":\r\n                formErrors.firstName = \r\n                    value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\"\r\n                break;\r\n\r\n                case \"lastName\":\r\n                    formErrors.lastName = \r\n                        value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\"\r\n                    break;\r\n\r\n            case \"confirmPassword\":\r\n                formErrors.confirmPassword =\r\n                    value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\r\n\r\n                formErrors.confirmPassword =\r\n                    value !== this.state.password ? \"Passwords not match ❌\" : \"\"\r\n                break;\r\n\r\n\r\n            case \"role\":\r\n                formErrors.role =\r\n                    value === \"Choose role\" ? \"You need to choose a role for user\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    }\r\n\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = { ...this.state.formErrors };\r\n        this.validateErrors(name, value, formErrors);\r\n        this.setState({ formErrors, [name]: value });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        if (formValid(this.state)) {\r\n            let user = {\r\n                emailAddress: this.state.email,\r\n                password: this.state.password,\r\n                role: this.state.role\r\n            };\r\n        } else {\r\n            console.log(formValid(this.state))\r\n            console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { formErrors } = this.state;\r\n        return (\r\n            <div className=\"bg\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\"></div>\r\n                        <div className=\"col-md-5\" style={{ height: \"100vh\" }}>\r\n\r\n                            <form\r\n                                className=\"form align-middle w-75\"\r\n                                style={{\r\n                                    position: \"relative\",\r\n                                    margin: \"50%\",\r\n                                    textAlign: \"center\"\r\n                                }}\r\n                                onSubmit={this.handleSubmit}\r\n                            >\r\n                                <h3>\r\n                                    <em>\r\n                                        Sign Up to People FreeLance\r\n                                    </em>\r\n                                </h3>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label style={{ float: \"left\" }}><h6><em>Email address</em></h6></Form.Label>\r\n                                        <Form.Control\r\n                                            className={formErrors.email.length > 0 ? \"error\" : null}\r\n                                            placeholder=\"Email\"\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            noValidate\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        {\r\n                                            formErrors.email.length > 0 && (\r\n                                                <h6><em className=\"errorMessage\">{formErrors.email}</em></h6>\r\n                                            )}\r\n\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"firstNameId\">\r\n                                        <Form.Label style={{ float: \"left\" }}><h6><em>First Name</em></h6></Form.Label>\r\n                                        <Form.Control\r\n                                            className={formErrors.email.length > 0 ? \"error\" : null}\r\n                                            placeholder=\"First Name\"\r\n                                            type=\"text\"\r\n                                            name=\"firstName\"\r\n                                            noValidate\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        {\r\n                                            formErrors.email.length > 0 && (\r\n                                                <h6><em className=\"errorMessage\">{formErrors.email}</em></h6>\r\n                                            )}\r\n\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"lastNameId\">\r\n                                        <Form.Label style={{ float: \"left\" }}><h6><em>Email address</em></h6></Form.Label>\r\n                                        <Form.Control\r\n                                            className={formErrors.email.length > 0 ? \"error\" : null}\r\n                                            placeholder=\"Last Name\"\r\n                                            type=\"text\"\r\n                                            name=\"lastName\"\r\n                                            noValidate\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        {\r\n                                            formErrors.email.length > 0 && (\r\n                                                <h6><em className=\"errorMessage\">{formErrors.email}</em></h6>\r\n                                            )}\r\n\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label style={{ float: \"left\" }}><h6><em>Password</em></h6></Form.Label>\r\n                                        <Form.Control\r\n                                            className={formErrors.password.length > 0 ? \"error\" : null}\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            noValidate\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        {formErrors.password.length > 0 && (\r\n                                            <span className=\"errorMessage\">{formErrors.password}</span>\r\n                                        )}\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicConfirmPassword\">\r\n                                        <Form.Label style={{ float: \"left\" }}><h6><em style={{ color: \"white\" }}>Confirm password</em></h6></Form.Label>\r\n                                        <Form.Control\r\n                                            className={formErrors.confirmPassword.length > 0 ? \"error\" : null}\r\n                                            placeholder=\"confirmPassword\"\r\n                                            type=\"password\"\r\n                                            name=\"confirmPassword\"\r\n                                            required\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        {formErrors.confirmPassword.length > 0 && (\r\n                                            <span className=\"errorMessage\">{formErrors.confirmPassword}</span>\r\n                                        )}\r\n                                    </Form.Group>\r\n\r\n                                    <label style={{ float: \"left\" }}><h6><em style={{ color: \"white\" }} >What role you will have?</em></h6></label>\r\n                                    <select\r\n                                        className={formErrors.role.length > 0 ? \"form-control error\" : \"form-control\"}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                        name=\"role\"\r\n                                    >\r\n                                        <option value=\"Choose role\">Choose role</option>\r\n                                        <option value=\"Employee\">Employee</option>\r\n                                        <option value=\"Employeer\">Employeer</option>\r\n\r\n                                    </select>\r\n                                    {formErrors.role.length > 0 && (\r\n                                        <span className=\"errorMessage\">{formErrors.role}</span>\r\n                                    )}\r\n                                </div>\r\n                                <Button type=\"submit\" color=\"primary\"><em>Sing Up</em></Button>{' '}\r\n                                <hr />\r\n                                <h6><em style={{ color: \"white\" }}>Back to <Link to='/Login'>Sing in</Link></em></h6>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Register"]},"metadata":{},"sourceType":"module"}