{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\repos\\\\TP_Project\\\\tp_project_freelance_platform_ui\\\\src\\\\components\\\\AuthComponents\\\\Login.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Register from '../AuthComponents/Register.jsx';\nimport \"./Login.css\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n      this.validateErrors(name, value, formErrors);\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n\n    this.validateErrors = (name, value, formErrors) => {\n      switch (name) {\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"Invalid email address ❌\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\n          break;\n\n        case \"confirmPassword\":\n          formErrors.confirmPassword = value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\n          break;\n\n        case \"role\":\n          formErrors.role = value === \"Choose role\" ? \"You need to choose a role for user\" : \"\";\n\n        default:\n          break;\n      }\n\n      ;\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      formErrors: {\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        role: \"\"\n      }\n    };\n  }\n\n  handleSubmit() {\n    let authData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    console.log(authData);\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Register, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-5\",\n      style: {\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form align-middle w-75\",\n      style: {\n        position: \"relative\",\n        margin: \"50%\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"People FreeLance\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Email address\"))), React.createElement(Form.Control, {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, formErrors.email))), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Password\"))), React.createElement(Form.Control, {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, formErrors.password))), React.createElement(Button, {\n      color: \"primary\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Login\"), ' ', React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Not registered? \", React.createElement(Link, {\n      to: \"/Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Create Account\")))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/andre/repos/TP_Project/tp_project_freelance_platform_ui/src/components/AuthComponents/Login.jsx"],"names":["React","Component","Form","Button","Link","Register","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Login","constructor","props","handleChange","e","preventDefault","name","value","target","state","validateErrors","setState","email","test","password","confirmPassword","role","handleSubmit","authData","console","log","render","height","position","margin","textAlign","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Register from '../AuthComponents/Register.jsx';\r\nimport \"./Login.css\";\r\n\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n};\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      formErrors: {\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        role: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n    this.validateErrors(name, value, formErrors);\r\n    this.setState({ formErrors, [name]: value });\r\n  }\r\n\r\n  validateErrors = (name, value, formErrors) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value)\r\n          ? \"\"\r\n          : \"Invalid email address ❌\";\r\n        break;\r\n\r\n      case \"password\":\r\n        formErrors.password =\r\n          value.length < 6 ? \"Minimum 6 characaters required ❌\" : \"\";\r\n        break;\r\n\r\n      case \"confirmPassword\":\r\n        formErrors.confirmPassword = \r\n          value.length < 6 ? \"Minimum 6 characaters required ❌\": \"\";\r\n        break;\r\n\r\n      case \"role\":\r\n          formErrors.role = \r\n            value === \"Choose role\" ? \"You need to choose a role for user\": \"\";\r\n      default:\r\n        break;\r\n    };\r\n  }\r\n\r\n  handleSubmit() {\r\n    let authData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    }\r\n\r\n    console.log(authData);\r\n  }\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (      \r\n      <div className=\"background\">\r\n        <Register></Register>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\"></div>\r\n            <div className=\"col-md-5\" style={{ height: \"100vh\" }}>\r\n\r\n              <form\r\n                className=\"form align-middle w-75\"\r\n                style={{\r\n                  position: \"relative\",\r\n                  margin: \"50%\",\r\n                  textAlign: \"center\"\r\n                }}\r\n              >\r\n                <h3>\r\n                  <em>\r\n                    People FreeLance\r\n                </em>\r\n                </h3>\r\n\r\n                <div className=\"form-group\">\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label style={{ float: \"left\" }}><h6><em>Email address</em></h6></Form.Label>\r\n                    <Form.Control\r\n                      className={formErrors.email.length > 0 ? \"error\" : null}\r\n                      placeholder=\"Email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      noValidate\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    {\r\n                      formErrors.email.length > 0 && (\r\n                        <h6><em className=\"errorMessage\">{formErrors.email}</em></h6>\r\n                      )}\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label style={{ float: \"left\" }}><h6><em>Password</em></h6></Form.Label>\r\n                    <Form.Control\r\n                      className={formErrors.password.length > 0 ? \"error\" : null}\r\n                      placeholder=\"Password\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      noValidate\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    {formErrors.password.length > 0 && (\r\n                      <span className=\"errorMessage\">{formErrors.password}</span>\r\n                    )}\r\n                  </Form.Group>\r\n                </div>\r\n                <Button color=\"primary\" onSubmit={this.handleSubmit}>Login</Button>{' '}\r\n                <p>Not registered? <Link to='/Register'>Create Account</Link></p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}